{"version":3,"file":"static/js/66.ab0f0709.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/FormChangeContact/FormChangeContact.styled.jsx","components/FormChangeContact/FormChangeContact.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/FormNewContact/FormNewContact.styled.jsx","components/FormNewContact/FormNewContact.jsx","page/ContactsPage/ContactsPage.styled.jsx","page/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { MdOutlineDeleteOutline } from 'react-icons/md';\nimport { MdPublishedWithChanges } from 'react-icons/md';\nimport { MdWifiCalling3 } from 'react-icons/md';\nimport {\n  Text,\n  Button,\n} from 'components/constants/DefaultStyleComponents.styled';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  :not(:last-child) {\n    margin-bottom: ${props => props.theme.spacing(2)};\n  }\n`;\nexport const Box = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const About = styled(Text)``;\n\nexport const Delete = styled(Button)`\n  padding: ${props => props.theme.spacing(3)};\n`;\n\nexport const Call = styled.a`\n  cursor: pointer;\n  display: block;\n  padding: ${props => props.theme.spacing(3)};\n  border: ${props => `1px solid ${props.theme.colors.accent}`};\n  border-radius: ${props => props.theme.radii.normal};\n  font-size: ${props => props.theme.fontSizes.small};\n  font-weight: ${props => props.theme.fontWeight.medium};\n  color: ${props => props.theme.colors.accent};\n  background-color: transparent;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.text};\n    background-color: ${props => props.theme.colors.accent};\n  }\n`;\n\nexport const Change = styled(Button)`\n  padding: ${props => props.theme.spacing(3)};\n`;\n\nexport const IconCall = styled(MdWifiCalling3)`\n  width: 32px;\n  height: 32px;\n`;\n\nexport const IconDelete = styled(MdOutlineDeleteOutline)`\n  width: 32px;\n  height: 32px;\n`;\n\nexport const IconChange = styled(MdPublishedWithChanges)`\n  width: 32px;\n  height: 32px;\n`;\n","import styled from 'styled-components';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { Button } from 'components/constants/DefaultStyleComponents.styled';\n\nexport const Backdrop = styled.div`\n  z-index: 2;\n  position: fixed;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(3, 2, 2, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nexport const ModalBox = styled.div`\n  min-width: 400px;\n  background-color: ${props => props.theme.colors.background};\n  padding: ${props => props.theme.spacing(4)};\n  border: ${props => props.theme.borders.normal};\n  border-color: ${props => props.theme.colors.accent};\n`;\nexport const StyledBtn = styled(Button)`\n  padding: ${props => props.theme.spacing(1)} ${props => props.theme.spacing(1)};\n  display: flex;\n  border: none;\n  margin-left: auto;\n`;\n\nexport const Icon = styled(AiOutlineClose)``;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Backdrop, ModalBox, StyledBtn, Icon } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  const onClickBackdrop = e => {\n    if (e.currentTarget === e.target) {\n      onClose(false);\n    }\n  };\n\n  useEffect(() => {\n    const onKeydown = e => {\n      if (e.code === 'Escape') {\n        onClose(false);\n      }\n    };\n    window.addEventListener('keydown', onKeydown);\n    return () => {\n      window.removeEventListener('keydown', onKeydown);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <Backdrop onClick={onClickBackdrop}>\n      <ModalBox>\n        <StyledBtn type=\"button\" onClick={() => onClose(false)}>\n          <Icon />\n        </StyledBtn>\n        {children}\n      </ModalBox>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\nimport { Form } from 'formik';\nimport {\n  Button,\n  BaseStyledInput,\n  BaseStyledLabel,\n  BaseStyledError,\n} from 'components/constants/DefaultStyleComponents.styled';\n\nexport const StyledForm = styled(Form)`\n  min-width: 500px;\n`;\n\nexport const Label = styled(BaseStyledLabel)`\n  margin-bottom: ${props => props.theme.spacing(10)};\n`;\n\nexport const Input = styled(BaseStyledInput)`\n  padding: ${props => props.theme.spacing(6)} ${props => props.theme.spacing(2)};\n`;\n\nexport const BtnSubmit = styled(Button)`\n  margin: 0 auto;\n`;\n\nexport const Error = styled(BaseStyledError)``;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport 'yup-phone';\nimport { Formik, ErrorMessage } from 'formik';\nimport { changeContact } from 'redux/contacts/operation';\nimport {\n  StyledForm,\n  Input,\n  Label,\n  BtnSubmit,\n  Error,\n} from './FormChangeContact.styled';\n\nconst schema = yup.object().shape({\n  number: yup.string().phone().required(),\n});\n\nconst initialValues = {\n  number: '+',\n};\n\nconst FormChangeContact = ({ contact, onClose }) => {\n  const dispatch = useDispatch();\n  const handleSubmit = ({ number }, { resetForm }) => {\n    dispatch(changeContact({ ...contact, number }));\n    resetForm();\n    onClose(false);\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <StyledForm autoComplete=\"off\">\n          <Label>\n            Phone number\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses\"\n              required\n            />\n            <ErrorMessage name=\"number\" component={Error} />\n          </Label>\n          <BtnSubmit type=\"submit\">Change</BtnSubmit>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n\nFormChangeContact.propTypes = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default FormChangeContact;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operation';\n\nimport {\n  Item,\n  Box,\n  About,\n  Delete,\n  Call,\n  Change,\n  IconCall,\n  IconDelete,\n  IconChange,\n} from './ContactItem.styled';\nimport Modal from 'components/Modal';\nimport FormChangeContact from 'components/FormChangeContact';\n\nconst ContactItem = ({ contact }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const { id, name, number } = contact;\n  return (\n    <>\n      <Item key={id}>\n        <About>\n          {name}: {number}\n        </About>\n        <Box style={{ display: 'flex', gap: '20px' }}>\n          <Call href={`tel:${number}`} title=\"Call\">\n            <IconCall />\n          </Call>\n          <Change\n            type=\"button\"\n            onClick={() => setIsModalOpen(true)}\n            title=\"Change phone number\"\n          >\n            <IconChange />\n          </Change>\n          <Delete\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n            title=\"Delete contact\"\n          >\n            <IconDelete />\n          </Delete>\n        </Box>\n        {isModalOpen && (\n          <Modal onClose={setIsModalOpen}>\n            {<FormChangeContact onClose={setIsModalOpen} contact={contact} />}\n          </Modal>\n        )}\n      </Item>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul``;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter.value;\n\nexport const selectVisibilityContacts = createSelector(\n  [selectContactsList, selectFilterValue],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import PropTypes from 'prop-types';\nimport ContactItem from 'components/ContactItem';\nimport { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibilityContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibilityContacts);\n  return (\n    <List>\n      {contacts.map(contact => {\n        return <ContactItem key={contact.id} contact={contact} />;\n      })}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterInput = styled.input`\n  flex-grow: 1;\n  padding: ${props => props.theme.spacing(2)};\n  border: ${props => props.theme.borders.normal};\n  border-radius: ${props => props.theme.radii.normal};\n  border-color: ${props => props.theme.colors.accent};\n  color: ${props => props.theme.colors.text};\n  font-size: ${props => props.theme.fontSizes.medium};\n  font-weight: ${props => props.theme.fontWeight.normal};\n  margin: 0;\n\n  &::placeholder {\n    opacity: 0.3;\n    font-size: ${props => props.theme.fontSizes.small};\n    font-weight: ${props => props.theme.fontWeight.normal};\n    color: ${props => props.theme.colors.text};\n  }\n\n  &:focus::placeholder {\n    opacity: 0;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { FilterInput } from './Filter.styled';\n\nconst FilterBlock = () => {\n  const dispatch = useDispatch();\n  const handleChange = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <FilterInput\n      type=\"text\"\n      name=\"filter\"\n      autoComplete=\"off\"\n      placeholder=\"Find contacts by name\"\n      onChange={handleChange}\n    />\n  );\n};\nexport default FilterBlock;\n","import styled from 'styled-components';\nimport { Form } from 'formik';\nimport {\n  Button,\n  BaseStyledInput,\n  BaseStyledLabel,\n  BaseStyledError,\n} from 'components/constants/DefaultStyleComponents.styled';\n\nexport const DataForm = styled(Form)`\n  min-width: 500px;\n`;\n\nexport const Label = styled(BaseStyledLabel)`\n  margin-bottom: ${props => props.theme.spacing(10)};\n`;\n\nexport const Input = styled(BaseStyledInput)`\n  padding: ${props => props.theme.spacing(6)} ${props => props.theme.spacing(2)};\n`;\n\nexport const BtnSubmit = styled(Button)`\n  margin: 0 auto;\n`;\n\nexport const Error = styled(BaseStyledError)``;\n","import PropTypes from 'prop-types';\nimport * as yup from 'yup';\nimport 'yup-phone';\nimport { Formik, ErrorMessage } from 'formik';\nimport {\n  DataForm,\n  Input,\n  Label,\n  BtnSubmit,\n  Error,\n} from './FormNewContact.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsList } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operation';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().phone().required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '+',\n};\n\nconst nameCheck = (contacts, value) => {\n  return contacts.find(\n    ({ name }) => value.toLowerCase() === name.toLowerCase()\n  );\n};\n\nconst FormNewContact = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const handleSubmit = (value, { resetForm }) => {\n    const nameCheckResult = nameCheck(contacts, value.name);\n    if (nameCheckResult) {\n      alert(`${value.name} is already in contact`);\n      return;\n    }\n    dispatch(addContact(value));\n    resetForm();\n    onClose(false);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <DataForm autoComplete=\"off\">\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <ErrorMessage name=\"name\" component={Error} />\n        </Label>\n\n        <Label>\n          Phone number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses\"\n            required\n          />\n          <ErrorMessage name=\"number\" component={Error} />\n        </Label>\n        <BtnSubmit type=\"submit\">Add contact</BtnSubmit>\n      </DataForm>\n    </Formik>\n  );\n};\n\nFormNewContact.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default FormNewContact;\n","import styled from 'styled-components';\nimport {\n  BaseMain,\n  Button,\n} from 'components/constants/DefaultStyleComponents.styled';\n\nexport const Main = styled(BaseMain)``;\nexport const StyledBtn = styled(Button)`\n  width: 230px;\n`;\nexport const Box = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${props => props.theme.spacing(6)};\n  margin-bottom: ${props => props.theme.spacing(8)};\n`;\n","import ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport FormNewContact from 'components/FormNewContact';\nimport Modal from 'components/Modal';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/operation';\nimport { Main, StyledBtn, Box } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const [isModalOpen, seIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Main>\n        <Box>\n          <Filter />\n          <StyledBtn type=\"button\" onClick={() => seIsModalOpen(true)}>\n            Add new contact\n          </StyledBtn>\n        </Box>\n        <ContactList />\n      </Main>\n\n      {isModalOpen && (\n        <Modal onClose={seIsModalOpen}>\n          <FormNewContact onClose={seIsModalOpen} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Item","styled","props","theme","spacing","Box","About","Text","Delete","Button","Call","colors","accent","radii","normal","fontSizes","small","fontWeight","medium","text","Change","IconCall","MdWifiCalling3","IconDelete","MdOutlineDeleteOutline","IconChange","MdPublishedWithChanges","Backdrop","ModalBox","background","borders","StyledBtn","Icon","AiOutlineClose","modalRoot","document","querySelector","onClose","children","useEffect","onKeydown","e","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","target","type","StyledForm","Form","Label","BaseStyledLabel","Input","BaseStyledInput","BtnSubmit","Error","BaseStyledError","schema","yup","shape","number","phone","required","initialValues","contact","dispatch","useDispatch","onSubmit","resetForm","changeContact","validationSchema","autoComplete","name","pattern","title","component","useState","isModalOpen","setIsModalOpen","id","style","display","gap","href","deleteContact","List","selectContactsList","state","contacts","items","selectVisibilityContacts","createSelector","filter","value","toLowerCase","includes","useSelector","map","FilterInput","placeholder","onChange","changeFilter","DataForm","nameCheckResult","find","nameCheck","alert","addContact","Main","BaseMain","seIsModalOpen","getContacts","Filter"],"sourceRoot":""}