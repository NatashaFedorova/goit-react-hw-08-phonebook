{"version":3,"file":"static/js/52.f5fca260.chunk.js","mappings":"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","sources":["components/constants/DefaultStyleComponents.styled.jsx","components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","page/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  cursor: pointer;\n  display: block;\n  padding: ${props => props.theme.spacing(3)} ${props => props.theme.spacing(5)};\n  border: ${props => `1px solid ${props.theme.colors.accent}`};\n  font-size: ${props => props.theme.fontSizes.small};\n  font-weight: ${props => props.theme.fontWeight.medium};\n  color: ${props => props.theme.colors.accent};\n  background-color: transparent;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.light};\n    background-color: ${props => props.theme.colors.accent};\n  }\n`;\n\nexport const Input = styled.input`\n  width: calc(100% - 15px);\n  margin-top: ${props => props.theme.spacing(3)};\n  margin-bottom: ${props => props.theme.spacing(6)};\n  padding: ${props => props.theme.spacing(2)};\n  border: ${props => props.theme.borders.normal};\n  border-color: ${props => props.theme.colors.accent};\n  color: ${props => props.theme.colors.light};\n  font-size: ${props => props.theme.fontSizes.medium};\n  font-weight: ${props => props.theme.fontWeight.normal};\n`;\n\nexport const Text = styled.p`\n  font-size: ${props => props.theme.fontSizes.medium};\n  font-weight: ${props => props.theme.fontWeight.normal};\n  color: ${props => props.theme.colors.light};\n  background-color: transparent;\n`;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport {\n  Button,\n  Text,\n} from 'components/constants/DefaultStyleComponents.styled';\n\nexport const DataForm = styled(Form)`\n  padding: ${props => props.theme.spacing(4)};\n  border: ${props => props.theme.borders.normal};\n  border-color: ${props => props.theme.colors.accent};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-right: ${props => props.theme.spacing(2)};\n  color: #fff;\n  font-size: ${props => props.theme.fontSizes.medium};\n  font-weight: ${props => props.theme.fontWeight.medium};\n`;\n\nexport const Input = styled(Field)`\n  width: calc(100% - 15px);\n  margin-top: ${props => props.theme.spacing(3)};\n  margin-bottom: ${props => props.theme.spacing(6)};\n  padding: ${props => props.theme.spacing(2)};\n  border: ${props => props.theme.borders.normal};\n  border-color: ${props => props.theme.colors.accent};\n  color: ${props => props.theme.colors.light};\n  font-size: ${props => props.theme.fontSizes.medium};\n  font-weight: ${props => props.theme.fontWeight.normal};\n`;\n\nexport const BtnSubmit = styled(Button)`\n  margin: 0 auto;\n`;\n\nexport const Error = styled(Text)`\n  color: ${props => props.theme.colors.error};\n  margin: ${props => props.theme.spacing(6)} auto;\n  margin-top: 0;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter.value;\n\nexport const selectVisibilityContacts = createSelector(\n  [selectContactsList, selectFilterValue],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import PropTypes from 'prop-types';\nimport * as yup from 'yup';\nimport 'yup-phone';\nimport { Formik, ErrorMessage } from 'formik';\nimport { DataForm, Input, Label, BtnSubmit, Error } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsList } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operation';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().phone().required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '+',\n};\n\nconst nameCheck = (contacts, value) => {\n  return contacts.find(\n    ({ name }) => value.toLowerCase() === name.toLowerCase()\n  );\n};\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const handleSubmit = (value, { resetForm }) => {\n    const nameCheckResult = nameCheck(contacts, value.name);\n    if (nameCheckResult) {\n      alert(`${value.Errorname} is already in contact`);\n      return;\n    }\n    console.log(value);\n    dispatch(addContact(value));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <DataForm autoComplete=\"off\">\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <ErrorMessage name=\"name\" component={Error} />\n        </Label>\n\n        <Label>\n          Phone number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses\"\n            required\n          />\n          <ErrorMessage name=\"number\" component={Error} />\n        </Label>\n        <BtnSubmit type=\"submit\">Add contact</BtnSubmit>\n      </DataForm>\n    </Formik>\n  );\n};\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\nimport {\n  Text,\n  Button,\n} from 'components/constants/DefaultStyleComponents.styled';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  :not(:last-child) {\n    margin-bottom: ${props => props.theme.spacing(2)};\n  }\n`;\nexport const About = styled(Text)``;\n\nexport const BtnDelete = styled(Button)`\n  padding: ${props => props.theme.spacing(3)};\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { changeContact, deleteContact } from 'redux/contacts/operation';\n\nimport { Item, About, BtnDelete } from './ContactItem.styled';\n\nconst Modal = ({ onClick, contact }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = { ...contact, number: e.target.elements.phone.value };\n    dispatch(changeContact(newContact));\n    e.target.reset();\n    onClick(false);\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"phone\" />\n        <button type=\"submit\">Submit-change</button>\n      </form>\n      <button type=\"button\" onClick={() => onClick(false)}>\n        Close\n      </button>\n    </div>\n  );\n};\n\nconst ContactItem = ({ contact }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const { id, name, number } = contact;\n  return (\n    <>\n      <Item key={id}>\n        <About>\n          {name}: {number}\n        </About>\n        <div style={{ display: 'flex', gap: '20px' }}>\n          <button type=\"button\" onClick={() => setIsModalOpen(true)}>\n            Change\n          </button>\n          <a href={`tel:${number}`}>Call</a>\n          <BtnDelete type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </BtnDelete>\n        </div>\n      </Item>\n      {isModalOpen && <Modal onClick={setIsModalOpen} contact={contact} />}\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul``;\n","import PropTypes from 'prop-types';\nimport ContactItem from 'components/ContactItem';\nimport { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibilityContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibilityContacts);\n  return (\n    <List>\n      {contacts.map(contact => {\n        return <ContactItem key={contact.id} contact={contact} />;\n      })}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\nimport {\n  Text,\n  Input,\n} from 'components/constants/DefaultStyleComponents.styled';\n\nexport const Description = styled(Text)``;\nexport const FilterInput = styled(Input)`\n  margin-bottom: 50px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\n// import { selectFilterValue } from 'redux/contacts/selectors';\nimport { Description, FilterInput } from './Filter.styled';\n\nconst FilterBlock = () => {\n  const dispatch = useDispatch();\n  const handleChange = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <>\n      <Description>Find contacts by name</Description>\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        autoComplete=\"off\"\n        onChange={handleChange}\n      />\n    </>\n  );\n};\nexport default FilterBlock;\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/operation';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Button","styled","props","theme","spacing","colors","accent","fontSizes","small","fontWeight","medium","light","Input","borders","normal","Text","DataForm","Form","Label","Field","BtnSubmit","Error","error","selectContactsList","state","contacts","items","selectVisibilityContacts","createSelector","filter","value","contact","name","toLowerCase","includes","schema","yup","shape","required","number","phone","initialValues","dispatch","useDispatch","useSelector","onSubmit","resetForm","nameCheckResult","find","nameCheck","alert","Errorname","console","log","addContact","validationSchema","autoComplete","type","pattern","title","component","Item","About","BtnDelete","Modal","onClick","e","preventDefault","newContact","target","elements","changeContact","reset","useState","isModalOpen","setIsModalOpen","id","style","display","gap","href","deleteContact","List","map","Description","FilterInput","onChange","changeFilter","useEffect","getContacts","Filter"],"sourceRoot":""}