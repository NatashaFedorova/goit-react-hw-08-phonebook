{"version":3,"file":"static/js/595.28c42351.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","page/RegisterPage/RegisterPage.styled.jsx","page/RegisterPage/RegisterPage.jsx","../node_modules/yup-password/index.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form } from 'formik';\nimport {\n  BaseStyledInput,\n  BaseStyledError,\n  Button,\n  BaseStyledLabel,\n} from 'components/constants/DefaultStyleComponents.styled';\n\nexport const StyledForm = styled(Form)`\n  margin: 0 auto;\n  width: 600px;\n  display: flex;\n  flex-direction: column;\n  gap: ${props => props.theme.spacing(6)};\n`;\n\nexport const Label = styled(BaseStyledLabel)``;\n\nexport const StyledInput = styled(BaseStyledInput)``;\n\nexport const Error = styled(BaseStyledError)``;\n\nexport const StyledBtn = styled(Button)``;\n","import { Formik, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport {\n  StyledForm,\n  Label,\n  StyledInput,\n  StyledBtn,\n  Error,\n} from './RegisterForm.styled';\n\nimport * as yup from 'yup';\nimport YupPassword from 'yup-password';\nYupPassword(yup);\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().email(),\n  password: yup\n    .string()\n    .required()\n    .minLowercase(1)\n    .minUppercase(1)\n    .minNumbers(1)\n    .minSymbols()\n    .min(8),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (value, { resetForm }) => {\n    dispatch(register(value));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <StyledForm>\n        <Label>\n          Name\n          <StyledInput type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\">{msg => <Error>{msg}</Error>}</ErrorMessage>\n        </Label>\n\n        <Label>\n          Email\n          <StyledInput\n            type=\"email\"\n            name=\"email\"\n            title=\"Invalid email address\"\n          />\n          <ErrorMessage name=\"email\">\n            {msg => <Error>{msg}</Error>}\n          </ErrorMessage>\n        </Label>\n\n        <Label>\n          Password\n          <StyledInput\n            type=\"password\"\n            name=\"password\"\n            title=\"The length of the password is at least 8. The password must contain at least 1 uppercase letter, 1 lowercase letter, 1 symbol, 1 number\"\n          />\n          <ErrorMessage name=\"password\">\n            {() => (\n              <Error>\n                {\n                  'The length of the password is at least 8. The password must contain at least 1 uppercase letter, 1 lowercase letter, 1 symbol, 1 number'\n                }\n              </Error>\n            )}\n          </ErrorMessage>\n        </Label>\n\n        <StyledBtn type=\"submit\">Registration</StyledBtn>\n      </StyledForm>\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","import styled from 'styled-components';\nimport {\n  BaseMain,\n  BaseTitle,\n} from 'components/constants/DefaultStyleComponents.styled';\n\nexport const Main = styled(BaseMain)``;\n\nexport const Title = styled(BaseTitle)`\n  text-align: center;\n  margin-bottom: ${props => props.theme.spacing(8)};\n`;\n","import RegisterForm from '../../components/RegisterForm';\nimport { Main, Title } from './RegisterPage.styled';\n\nconst RegisterPage = () => {\n  return (\n    <Main>\n      <Title>Registration form</Title>\n      <RegisterForm />\n    </Main>\n  );\n};\n\nexport default RegisterPage;\n","'use strict'\n\n// pluralize\nconst p = function (word, num) {\n    return num === 1 ? word : `${word}s`\n}\n\nconst isNullOrUndefined = function (value) {\n    return value === null || value === undefined\n}\n\nfunction minLowercase(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} lowercase ' + p('letter', length)\n    return this.test({\n        name: 'minLowercase',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[a-z]/g) || []).length >= length\n        }\n    })\n} // minLowercase()\n\nfunction minUppercase(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} uppercase ' + p('letter', length)\n    return this.test({\n        name: 'minUppercase',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[A-Z]/g) || []).length >= length\n        }\n    })\n} // minUppercase()\n\nfunction minNumbers(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('number', length)\n    return this.test({\n        name: 'minNumber',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[0-9]/g) || []).length >= length\n        }\n    })\n} // minNumber()\n\nfunction minSymbols(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('symbol', length)\n    return this.test({\n        name: 'minSymbol',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[^a-zA-Z0-9\\s]/g) || []).length >= length\n        }\n    })\n} // minSymbol()\n\nfunction minRepeating(length = 2, message) {\n    const msg = message || '${path} must not contain sequences of more than ${length} repeated ' + p('character', length)\n    return this.test({\n        name: 'minRepeating',\n        exclusive: true,\n        message: msg,\n        params: { length: length },\n        test(value) {\n            return isNullOrUndefined(value) || ! new RegExp(`(.)\\\\1{${length},}`).test(value)\n        }\n    })\n} // minRepeating()\n\nfunction minWords(length = 2, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('word', length)\n    const rx = new RegExp('[a-zA-Z0-9]')\n    return this.test({\n        name: 'minWords',\n        exclusive: true,\n        message: msg,\n        params: { length: length },\n        test(value) {\n            return isNullOrUndefined(value) || value.split(' ').filter(v => !! v && rx.test(v)).length >= length\n        }\n    })\n} // minWords()\n\nfunction password() {\n    return this\n        .min(8)\n        .max(250)\n        .minLowercase(1)\n        .minUppercase(1)\n        .minNumbers(1)\n        .minSymbols(1)\n} // password()\n\nfunction setup(yup) {\n    yup.addMethod(yup.string, 'minLowercase', minLowercase)\n    yup.addMethod(yup.string, 'minUppercase', minUppercase)\n    yup.addMethod(yup.string, 'minNumber', minNumbers)\n    yup.addMethod(yup.string, 'minNumbers', minNumbers)\n    yup.addMethod(yup.string, 'minSymbol', minSymbols)\n    yup.addMethod(yup.string, 'minSymbols', minSymbols)\n    yup.addMethod(yup.string, 'minRepeating', minRepeating)\n    yup.addMethod(yup.string, 'minWords', minWords)\n    yup.addMethod(yup.string, 'password', password)\n}\n\nmodule.exports = setup\n"],"names":["StyledForm","styled","Form","props","theme","spacing","Label","BaseStyledLabel","StyledInput","BaseStyledInput","Error","BaseStyledError","StyledBtn","Button","YupPassword","yup","schema","shape","name","required","email","password","minLowercase","minUppercase","minNumbers","minSymbols","min","initialValues","dispatch","useDispatch","onSubmit","value","resetForm","register","validationSchema","type","msg","title","Main","BaseMain","Title","BaseTitle","p","word","num","isNullOrUndefined","undefined","length","message","this","test","exclusive","params","match","minRepeating","RegExp","minWords","rx","split","filter","v","max","module","exports","addMethod","string"],"sourceRoot":""}