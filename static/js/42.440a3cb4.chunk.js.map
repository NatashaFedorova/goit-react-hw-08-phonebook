{"version":3,"file":"static/js/42.440a3cb4.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/FormChangeContact/FormChangeContact.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/FormNewContact/FormNewContact.styled.jsx","components/FormNewContact/FormNewContact.jsx","page/ContactsPage/ContactsPage.styled.jsx","page/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { MdOutlineDeleteOutline } from 'react-icons/md';\nimport { MdPublishedWithChanges } from 'react-icons/md';\nimport { MdWifiCalling3 } from 'react-icons/md';\nimport {\n  Text,\n  Button,\n} from 'components/constants/DefaultStyleComponents.styled';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  :not(:last-child) {\n    margin-bottom: ${props => props.theme.spacing(2)};\n  }\n`;\nexport const Box = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const About = styled(Text)``;\n\nexport const Delete = styled(Button)`\n  padding: ${props => props.theme.spacing(3)};\n`;\n\nexport const Call = styled(Button)`\n  padding: ${props => props.theme.spacing(3)};\n`;\n\nexport const Change = styled(Button)`\n  padding: ${props => props.theme.spacing(3)};\n`;\n\nexport const IconCall = styled(MdWifiCalling3)`\n  width: 32px;\n  height: 32px;\n`;\n\nexport const IconDelete = styled(MdOutlineDeleteOutline)`\n  width: 32px;\n  height: 32px;\n`;\n\nexport const IconChange = styled(MdPublishedWithChanges)`\n  width: 32px;\n  height: 32px;\n`;\n","import styled from 'styled-components';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { Button } from 'components/constants/DefaultStyleComponents.styled';\n\nexport const Backdrop = styled.div`\n  z-index: 2;\n  position: fixed;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(3, 2, 2, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nexport const ModalBox = styled.div`\n  min-width: 400px;\n  background-color: ${props => props.theme.colors.background};\n  padding: ${props => props.theme.spacing(4)};\n  border: ${props => props.theme.borders.normal};\n  border-color: ${props => props.theme.colors.accent};\n`;\nexport const StyledBtn = styled(Button)`\n  padding: ${props => props.theme.spacing(1)} ${props => props.theme.spacing(1)};\n  display: flex;\n  border: none;\n  margin-left: auto;\n`;\n\nexport const Icon = styled(AiOutlineClose)``;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Backdrop, ModalBox, StyledBtn, Icon } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  const onClickBackdrop = e => {\n    if (e.currentTarget === e.target) {\n      onClose(false);\n    }\n  };\n\n  useEffect(() => {\n    const onKeydown = e => {\n      if (e.code === 'Escape') {\n        onClose(false);\n      }\n    };\n    window.addEventListener('keydown', onKeydown);\n    return () => {\n      window.removeEventListener('keydown', onKeydown);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <Backdrop onClick={onClickBackdrop}>\n      <ModalBox>\n        <StyledBtn type=\"button\" onClick={() => onClose(false)}>\n          <Icon />\n        </StyledBtn>\n        {children}\n      </ModalBox>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n\n// =======================================================================\n// import { useDispatch } from 'react-redux';\n// import { changeContact } from 'redux/contacts/operation';\n\n// const Modal = ({ onClick, contact }) => {\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const newContact = { ...contact, number: e.target.elements.phone.value };\n//     dispatch(changeContact(newContact));\n//     e.target.reset();\n//     onClick(false);\n//   };\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <input type=\"text\" name=\"phone\" />\n//         <button type=\"submit\">Submit-change</button>\n//       </form>\n//       <button type=\"button\" onClick={() => onClick(false)}>\n//         Close\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default Modal;\n","import { useDispatch } from 'react-redux';\nimport { changeContact } from 'redux/contacts/operation';\n\nconst FormChangeContact = ({ contact, onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = { ...contact, number: e.target.elements.phone.value };\n    dispatch(changeContact(newContact));\n    e.target.reset();\n    onClose(false);\n  };\n  return (\n    <div>\n      <p></p>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"phone\" placeholder=\"new phone number\" />\n        <button type=\"submit\">Change</button>\n      </form>\n    </div>\n  );\n};\n\nexport default FormChangeContact;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operation';\n\nimport {\n  Item,\n  Box,\n  About,\n  Delete,\n  Call,\n  Change,\n  IconCall,\n  IconDelete,\n  IconChange,\n} from './ContactItem.styled';\nimport Modal from 'components/Modal';\nimport FormChangeContact from 'components/FormChangeContact';\n\nconst ContactItem = ({ contact }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const { id, name, number } = contact;\n  return (\n    <>\n      <Item key={id}>\n        <About>\n          {name}: {number}\n        </About>\n        <Box style={{ display: 'flex', gap: '20px' }}>\n          <Call href={`tel:${number}`} title=\"Call\">\n            <IconCall />\n          </Call>\n          <Change\n            type=\"button\"\n            onClick={() => setIsModalOpen(true)}\n            title=\"Change phone number\"\n          >\n            <IconChange />\n          </Change>\n          <Delete\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n            title=\"Delete contact\"\n          >\n            <IconDelete />\n          </Delete>\n        </Box>\n        {isModalOpen && (\n          <Modal onClose={setIsModalOpen}>\n            {<FormChangeContact onClose={setIsModalOpen} contact={contact} />}\n          </Modal>\n        )}\n      </Item>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul``;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter.value;\n\nexport const selectVisibilityContacts = createSelector(\n  [selectContactsList, selectFilterValue],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import PropTypes from 'prop-types';\nimport ContactItem from 'components/ContactItem';\nimport { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibilityContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibilityContacts);\n  return (\n    <List>\n      {contacts.map(contact => {\n        return <ContactItem key={contact.id} contact={contact} />;\n      })}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterInput = styled.input`\n  flex-grow: 1;\n  padding: ${props => props.theme.spacing(2)};\n  border: ${props => props.theme.borders.normal};\n  border-radius: ${props => props.theme.radii.normal};\n  border-color: ${props => props.theme.colors.accent};\n  color: ${props => props.theme.colors.light};\n  font-size: ${props => props.theme.fontSizes.medium};\n  font-weight: ${props => props.theme.fontWeight.normal};\n  margin: 0;\n\n  &::placeholder {\n    opacity: 0.3;\n    font-size: ${props => props.theme.fontSizes.small};\n    font-weight: ${props => props.theme.fontWeight.normal};\n    color: ${props => props.theme.colors.light};\n  }\n\n  &:focus::placeholder {\n    opacity: 0;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { FilterInput } from './Filter.styled';\n\nconst FilterBlock = () => {\n  const dispatch = useDispatch();\n  const handleChange = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <FilterInput\n      type=\"text\"\n      name=\"filter\"\n      autoComplete=\"off\"\n      placeholder=\"Find contacts by name\"\n      onChange={handleChange}\n    />\n  );\n};\nexport default FilterBlock;\n","import styled from 'styled-components';\nimport { Form } from 'formik';\nimport {\n  Button,\n  BaseStyledInput,\n  BaseStyledLabel,\n  BaseStyledError,\n} from 'components/constants/DefaultStyleComponents.styled';\n\nexport const DataForm = styled(Form)`\n  min-width: 500px;\n`;\n\nexport const Label = styled(BaseStyledLabel)`\n  margin-bottom: ${props => props.theme.spacing(10)};\n`;\n\nexport const Input = styled(BaseStyledInput)`\n  padding: ${props => props.theme.spacing(6)} ${props => props.theme.spacing(2)};\n`;\n\nexport const BtnSubmit = styled(Button)`\n  margin: 0 auto;\n`;\n\nexport const Error = styled(BaseStyledError)``;\n","import PropTypes from 'prop-types';\nimport * as yup from 'yup';\nimport 'yup-phone';\nimport { Formik, ErrorMessage } from 'formik';\nimport {\n  DataForm,\n  Input,\n  Label,\n  BtnSubmit,\n  Error,\n} from './FormNewContact.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsList } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operation';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().phone().required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '+',\n};\n\nconst nameCheck = (contacts, value) => {\n  return contacts.find(\n    ({ name }) => value.toLowerCase() === name.toLowerCase()\n  );\n};\n\nconst FormNewContact = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const handleSubmit = (value, { resetForm }) => {\n    const nameCheckResult = nameCheck(contacts, value.name);\n    if (nameCheckResult) {\n      alert(`${value.name} is already in contact`);\n      return;\n    }\n    dispatch(addContact(value));\n    resetForm();\n    onClose(false);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <DataForm autoComplete=\"off\">\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <ErrorMessage name=\"name\" component={Error} />\n        </Label>\n\n        <Label>\n          Phone number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses\"\n            required\n          />\n          <ErrorMessage name=\"number\" component={Error} />\n        </Label>\n        <BtnSubmit type=\"submit\">Add contact</BtnSubmit>\n      </DataForm>\n    </Formik>\n  );\n};\n\nFormNewContact.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default FormNewContact;\n","import styled from 'styled-components';\nimport {\n  BaseMain,\n  Button,\n} from 'components/constants/DefaultStyleComponents.styled';\n\nexport const Main = styled(BaseMain)``;\nexport const StyledBtn = styled(Button)`\n  width: 230px;\n`;\nexport const Box = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${props => props.theme.spacing(6)};\n  margin-bottom: ${props => props.theme.spacing(8)};\n`;\n","import ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport FormNewContact from 'components/FormNewContact';\nimport Modal from 'components/Modal';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/operation';\nimport { Main, StyledBtn, Box } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const [isModalOpen, seIsModalOpen] = useState(false);\n  console.log(isModalOpen);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Main>\n        <Box>\n          <Filter />\n          <StyledBtn type=\"button\" onClick={() => seIsModalOpen(true)}>\n            Add new contact\n          </StyledBtn>\n        </Box>\n        <ContactList />\n      </Main>\n\n      {isModalOpen && (\n        <Modal onClose={seIsModalOpen}>\n          <FormNewContact onClose={seIsModalOpen} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Item","styled","props","theme","spacing","Box","About","Text","Delete","Button","Call","Change","IconCall","MdWifiCalling3","IconDelete","MdOutlineDeleteOutline","IconChange","MdPublishedWithChanges","Backdrop","ModalBox","colors","background","borders","normal","accent","StyledBtn","Icon","AiOutlineClose","modalRoot","document","querySelector","onClose","children","useEffect","onKeydown","e","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","target","type","contact","dispatch","useDispatch","onSubmit","preventDefault","newContact","number","elements","phone","value","changeContact","reset","name","placeholder","useState","isModalOpen","setIsModalOpen","id","style","display","gap","href","title","deleteContact","List","selectContactsList","state","contacts","items","selectVisibilityContacts","createSelector","filter","toLowerCase","includes","useSelector","map","FilterInput","radii","light","fontSizes","medium","fontWeight","small","autoComplete","onChange","changeFilter","DataForm","Form","Label","BaseStyledLabel","Input","BaseStyledInput","BtnSubmit","Error","BaseStyledError","schema","yup","shape","required","initialValues","resetForm","nameCheckResult","find","nameCheck","alert","addContact","validationSchema","pattern","component","Main","BaseMain","seIsModalOpen","console","log","getContacts","Filter"],"sourceRoot":""}